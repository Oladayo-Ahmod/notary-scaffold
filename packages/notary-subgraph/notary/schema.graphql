type DocumentNotarized @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  documentHash: String! # string
  timestamp: BigInt! # uint256
  imageURI: String! # string
  description: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DocumentRetrieved @entity(immutable: true) {
  id: Bytes!
  requester: Bytes! # address
  documentHash: String! # string
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DocumentRevoked @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  documentHash: String! # string
  timestamp: BigInt! # uint256
  description: String! # string
  imageURI: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Document @entity {
  id: ID!
  owner: Bytes!
  hash: String!
  timestamp: BigInt!
  imageURI: String
  description: String
  revoked: Boolean!
  notarizations: [DocumentNotarized!]! @derivedFrom(field: "documentHash")
  retrievals: [DocumentRetrieved!]! @derivedFrom(field: "documentHash")
  revocations: [DocumentRevoked!]! @derivedFrom(field: "documentHash")
}

type User @entity {
  id: ID!
  documents: [Document!]! @derivedFrom(field: "owner")
}

type Query {
  documentNotarizeds(first: Int, skip: Int, where: DocumentFilter, orderBy: String, orderDirection: String): [DocumentNotarized!]!
  documentByHash(hash: String!): Document
  documentsByOwner(owner: Bytes!, first: Int, skip: Int): [Document!]!
  documentRetrieveds(first: Int, skip: Int, where: DocumentRetrievedFilter, orderBy: String, orderDirection: String): [DocumentRetrieved!]!
  documentRevoked(first: Int, skip: Int, where: DocumentRevokedFilter, orderBy: String, orderDirection: String): [DocumentRevoked!]!
  documentByDescription(description: String!, first: Int, skip: Int): [Document!]!
  allUsers(first: Int, skip: Int): [User!]!
}

input DocumentFilter {
  owner: Bytes
  revoked: Boolean
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  description_contains: String
}

input DocumentRetrievedFilter {
  requester: Bytes
  timestamp_gt: BigInt
  timestamp_lt: BigInt
}

input DocumentRevokedFilter {
  owner: Bytes
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  description_contains: String
}